// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniShoppingCartAPI.DbContexts;

#nullable disable

namespace MiniShoppingCartAPI.Migrations
{
    [DbContext(typeof(MiniShoppingCartApiContextSQLExpress))]
    [Migration("20240224070627_SetupDb")]
    partial class SetupDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MiniShoppingCartAPI.Entities.Cart", b =>
                {
                    b.Property<Guid>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SetQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CartId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("MiniShoppingCartAPI.Entities.Product", b =>
                {
                    b.Property<Guid>("Pid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Productname")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Pid");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Pid = new Guid("d0433985-2fcd-4f19-a832-ea72e63f970b"),
                            Price = 100,
                            Productname = "Apple",
                            Quantity = 10
                        },
                        new
                        {
                            Pid = new Guid("6743816e-9122-4100-a1f3-4eacb6cc377c"),
                            Price = 50,
                            Productname = "Orange",
                            Quantity = 20
                        },
                        new
                        {
                            Pid = new Guid("8a273cba-a4c7-419e-9fac-f9bcc38ca760"),
                            Price = 10,
                            Productname = "Banana",
                            Quantity = 50
                        },
                        new
                        {
                            Pid = new Guid("f44e7140-4683-4ddb-b3a4-3a6077ff9d56"),
                            Price = 200,
                            Productname = "Watermelon",
                            Quantity = 5
                        },
                        new
                        {
                            Pid = new Guid("18893b7e-d11a-493b-8906-19028d77942f"),
                            Price = 30,
                            Productname = "Strawberry",
                            Quantity = 100
                        });
                });

            modelBuilder.Entity("MiniShoppingCartAPI.Entities.User", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Uid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MiniShoppingCartAPI.Entities.Cart", b =>
                {
                    b.HasOne("MiniShoppingCartAPI.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiniShoppingCartAPI.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
